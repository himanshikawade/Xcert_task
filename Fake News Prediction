{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "45c346f9",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "papermill": {
     "duration": 0.008499,
     "end_time": "2024-06-29T10:49:45.063320",
     "exception": false,
     "start_time": "2024-06-29T10:49:45.054821",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Importing libraries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "ff3e65b7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-29T10:49:45.081290Z",
     "iopub.status.busy": "2024-06-29T10:49:45.080835Z",
     "iopub.status.idle": "2024-06-29T10:49:47.420159Z",
     "shell.execute_reply": "2024-06-29T10:49:47.419261Z"
    },
    "papermill": {
     "duration": 2.351127,
     "end_time": "2024-06-29T10:49:47.422613",
     "exception": false,
     "start_time": "2024-06-29T10:49:45.071486",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import accuracy_score\n",
    "from sklearn.metrics import classification_report\n",
    "import re\n",
    "import string"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fdf01f34",
   "metadata": {
    "papermill": {
     "duration": 0.007704,
     "end_time": "2024-06-29T10:49:47.438408",
     "exception": false,
     "start_time": "2024-06-29T10:49:47.430704",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Importing Dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "e06488b4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-29T10:49:47.456691Z",
     "iopub.status.busy": "2024-06-29T10:49:47.455742Z",
     "iopub.status.idle": "2024-06-29T10:49:49.986864Z",
     "shell.execute_reply": "2024-06-29T10:49:49.985677Z"
    },
    "papermill": {
     "duration": 2.543119,
     "end_time": "2024-06-29T10:49:49.989516",
     "exception": false,
     "start_time": "2024-06-29T10:49:47.446397",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "fake_news=pd.read_csv('/kaggle/input/news-dataset/Fake.csv')\n",
    "true_news=pd.read_csv('/kaggle/input/news-dataset/True.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "0fbfde64",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-29T10:49:50.007556Z",
     "iopub.status.busy": "2024-06-29T10:49:50.006681Z",
     "iopub.status.idle": "2024-06-29T10:49:50.026417Z",
     "shell.execute_reply": "2024-06-29T10:49:50.025291Z"
    },
    "papermill": {
     "duration": 0.030858,
     "end_time": "2024-06-29T10:49:50.028489",
     "exception": false,
     "start_time": "2024-06-29T10:49:49.997631",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>title</th>\n",
       "      <th>text</th>\n",
       "      <th>subject</th>\n",
       "      <th>date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Donald Trump Sends Out Embarrassing New Year’...</td>\n",
       "      <td>Donald Trump just couldn t wish all Americans ...</td>\n",
       "      <td>News</td>\n",
       "      <td>December 31, 2017</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Drunk Bragging Trump Staffer Started Russian ...</td>\n",
       "      <td>House Intelligence Committee Chairman Devin Nu...</td>\n",
       "      <td>News</td>\n",
       "      <td>December 31, 2017</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Sheriff David Clarke Becomes An Internet Joke...</td>\n",
       "      <td>On Friday, it was revealed that former Milwauk...</td>\n",
       "      <td>News</td>\n",
       "      <td>December 30, 2017</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Trump Is So Obsessed He Even Has Obama’s Name...</td>\n",
       "      <td>On Christmas day, Donald Trump announced that ...</td>\n",
       "      <td>News</td>\n",
       "      <td>December 29, 2017</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Pope Francis Just Called Out Donald Trump Dur...</td>\n",
       "      <td>Pope Francis used his annual Christmas Day mes...</td>\n",
       "      <td>News</td>\n",
       "      <td>December 25, 2017</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                               title  \\\n",
       "0   Donald Trump Sends Out Embarrassing New Year’...   \n",
       "1   Drunk Bragging Trump Staffer Started Russian ...   \n",
       "2   Sheriff David Clarke Becomes An Internet Joke...   \n",
       "3   Trump Is So Obsessed He Even Has Obama’s Name...   \n",
       "4   Pope Francis Just Called Out Donald Trump Dur...   \n",
       "\n",
       "                                                text subject  \\\n",
       "0  Donald Trump just couldn t wish all Americans ...    News   \n",
       "1  House Intelligence Committee Chairman Devin Nu...    News   \n",
       "2  On Friday, it was revealed that former Milwauk...    News   \n",
       "3  On Christmas day, Donald Trump announced that ...    News   \n",
       "4  Pope Francis used his annual Christmas Day mes...    News   \n",
       "\n",
       "                date  \n",
       "0  December 31, 2017  \n",
       "1  December 31, 2017  \n",
       "2  December 30, 2017  \n",
       "3  December 29, 2017  \n",
       "4  December 25, 2017  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "fake_news.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "6c0a9a80",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-29T10:49:50.047329Z",
     "iopub.status.busy": "2024-06-29T10:49:50.046574Z",
     "iopub.status.idle": "2024-06-29T10:49:50.057469Z",
     "shell.execute_reply": "2024-06-29T10:49:50.056450Z"
    },
    "papermill": {
     "duration": 0.022348,
     "end_time": "2024-06-29T10:49:50.059399",
     "exception": false,
     "start_time": "2024-06-29T10:49:50.037051",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>title</th>\n",
       "      <th>text</th>\n",
       "      <th>subject</th>\n",
       "      <th>date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>As U.S. budget fight looms, Republicans flip t...</td>\n",
       "      <td>WASHINGTON (Reuters) - The head of a conservat...</td>\n",
       "      <td>politicsNews</td>\n",
       "      <td>December 31, 2017</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>U.S. military to accept transgender recruits o...</td>\n",
       "      <td>WASHINGTON (Reuters) - Transgender people will...</td>\n",
       "      <td>politicsNews</td>\n",
       "      <td>December 29, 2017</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Senior U.S. Republican senator: 'Let Mr. Muell...</td>\n",
       "      <td>WASHINGTON (Reuters) - The special counsel inv...</td>\n",
       "      <td>politicsNews</td>\n",
       "      <td>December 31, 2017</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>FBI Russia probe helped by Australian diplomat...</td>\n",
       "      <td>WASHINGTON (Reuters) - Trump campaign adviser ...</td>\n",
       "      <td>politicsNews</td>\n",
       "      <td>December 30, 2017</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Trump wants Postal Service to charge 'much mor...</td>\n",
       "      <td>SEATTLE/WASHINGTON (Reuters) - President Donal...</td>\n",
       "      <td>politicsNews</td>\n",
       "      <td>December 29, 2017</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                               title  \\\n",
       "0  As U.S. budget fight looms, Republicans flip t...   \n",
       "1  U.S. military to accept transgender recruits o...   \n",
       "2  Senior U.S. Republican senator: 'Let Mr. Muell...   \n",
       "3  FBI Russia probe helped by Australian diplomat...   \n",
       "4  Trump wants Postal Service to charge 'much mor...   \n",
       "\n",
       "                                                text       subject  \\\n",
       "0  WASHINGTON (Reuters) - The head of a conservat...  politicsNews   \n",
       "1  WASHINGTON (Reuters) - Transgender people will...  politicsNews   \n",
       "2  WASHINGTON (Reuters) - The special counsel inv...  politicsNews   \n",
       "3  WASHINGTON (Reuters) - Trump campaign adviser ...  politicsNews   \n",
       "4  SEATTLE/WASHINGTON (Reuters) - President Donal...  politicsNews   \n",
       "\n",
       "                 date  \n",
       "0  December 31, 2017   \n",
       "1  December 29, 2017   \n",
       "2  December 31, 2017   \n",
       "3  December 30, 2017   \n",
       "4  December 29, 2017   "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "true_news.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "1a1c39c3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-29T10:49:50.078411Z",
     "iopub.status.busy": "2024-06-29T10:49:50.077748Z",
     "iopub.status.idle": "2024-06-29T10:49:50.545426Z",
     "shell.execute_reply": "2024-06-29T10:49:50.544309Z"
    },
    "papermill": {
     "duration": 0.47972,
     "end_time": "2024-06-29T10:49:50.547758",
     "exception": false,
     "start_time": "2024-06-29T10:49:50.068038",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Data Visulization\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "sns.countplot(y=\"subject\", palette=\"bright\", data=true_news).set_title('True News Subject Distribution')\n",
    "plt.show()\n",
    "\n",
    "sns.countplot(y=\"subject\", palette=\"bright\", data=fake_news).set_title('Fake News Subject Distribution')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "d0294367",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-29T10:49:50.568388Z",
     "iopub.status.busy": "2024-06-29T10:49:50.567713Z",
     "iopub.status.idle": "2024-06-29T10:49:50.583782Z",
     "shell.execute_reply": "2024-06-29T10:49:50.582823Z"
    },
    "papermill": {
     "duration": 0.028905,
     "end_time": "2024-06-29T10:49:50.586104",
     "exception": false,
     "start_time": "2024-06-29T10:49:50.557199",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>title</th>\n",
       "      <th>text</th>\n",
       "      <th>subject</th>\n",
       "      <th>date</th>\n",
       "      <th>label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>As U.S. budget fight looms, Republicans flip t...</td>\n",
       "      <td>WASHINGTON (Reuters) - The head of a conservat...</td>\n",
       "      <td>politicsNews</td>\n",
       "      <td>December 31, 2017</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>U.S. military to accept transgender recruits o...</td>\n",
       "      <td>WASHINGTON (Reuters) - Transgender people will...</td>\n",
       "      <td>politicsNews</td>\n",
       "      <td>December 29, 2017</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Senior U.S. Republican senator: 'Let Mr. Muell...</td>\n",
       "      <td>WASHINGTON (Reuters) - The special counsel inv...</td>\n",
       "      <td>politicsNews</td>\n",
       "      <td>December 31, 2017</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>FBI Russia probe helped by Australian diplomat...</td>\n",
       "      <td>WASHINGTON (Reuters) - Trump campaign adviser ...</td>\n",
       "      <td>politicsNews</td>\n",
       "      <td>December 30, 2017</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Trump wants Postal Service to charge 'much mor...</td>\n",
       "      <td>SEATTLE/WASHINGTON (Reuters) - President Donal...</td>\n",
       "      <td>politicsNews</td>\n",
       "      <td>December 29, 2017</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                               title  \\\n",
       "0  As U.S. budget fight looms, Republicans flip t...   \n",
       "1  U.S. military to accept transgender recruits o...   \n",
       "2  Senior U.S. Republican senator: 'Let Mr. Muell...   \n",
       "3  FBI Russia probe helped by Australian diplomat...   \n",
       "4  Trump wants Postal Service to charge 'much mor...   \n",
       "\n",
       "                                                text       subject  \\\n",
       "0  WASHINGTON (Reuters) - The head of a conservat...  politicsNews   \n",
       "1  WASHINGTON (Reuters) - Transgender people will...  politicsNews   \n",
       "2  WASHINGTON (Reuters) - The special counsel inv...  politicsNews   \n",
       "3  WASHINGTON (Reuters) - Trump campaign adviser ...  politicsNews   \n",
       "4  SEATTLE/WASHINGTON (Reuters) - President Donal...  politicsNews   \n",
       "\n",
       "                 date  label  \n",
       "0  December 31, 2017       1  \n",
       "1  December 29, 2017       1  \n",
       "2  December 31, 2017       1  \n",
       "3  December 30, 2017       1  \n",
       "4  December 29, 2017       1  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Data Combination\n",
    "true_news['label']=1\n",
    "fake_news['label']=0\n",
    "\n",
    "df=pd.concat([true_news,fake_news])\n",
    "df.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "aa1a9b17",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-29T10:49:50.607347Z",
     "iopub.status.busy": "2024-06-29T10:49:50.606964Z",
     "iopub.status.idle": "2024-06-29T10:49:50.618536Z",
     "shell.execute_reply": "2024-06-29T10:49:50.617534Z"
    },
    "papermill": {
     "duration": 0.024408,
     "end_time": "2024-06-29T10:49:50.620684",
     "exception": false,
     "start_time": "2024-06-29T10:49:50.596276",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>title</th>\n",
       "      <th>text</th>\n",
       "      <th>subject</th>\n",
       "      <th>date</th>\n",
       "      <th>label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>As U.S. budget fight looms, Republicans flip t...</td>\n",
       "      <td>WASHINGTON (Reuters) - The head of a conservat...</td>\n",
       "      <td>politicsNews</td>\n",
       "      <td>December 31, 2017</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>U.S. military to accept transgender recruits o...</td>\n",
       "      <td>WASHINGTON (Reuters) - Transgender people will...</td>\n",
       "      <td>politicsNews</td>\n",
       "      <td>December 29, 2017</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Senior U.S. Republican senator: 'Let Mr. Muell...</td>\n",
       "      <td>WASHINGTON (Reuters) - The special counsel inv...</td>\n",
       "      <td>politicsNews</td>\n",
       "      <td>December 31, 2017</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>FBI Russia probe helped by Australian diplomat...</td>\n",
       "      <td>WASHINGTON (Reuters) - Trump campaign adviser ...</td>\n",
       "      <td>politicsNews</td>\n",
       "      <td>December 30, 2017</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Trump wants Postal Service to charge 'much mor...</td>\n",
       "      <td>SEATTLE/WASHINGTON (Reuters) - President Donal...</td>\n",
       "      <td>politicsNews</td>\n",
       "      <td>December 29, 2017</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                               title  \\\n",
       "0  As U.S. budget fight looms, Republicans flip t...   \n",
       "1  U.S. military to accept transgender recruits o...   \n",
       "2  Senior U.S. Republican senator: 'Let Mr. Muell...   \n",
       "3  FBI Russia probe helped by Australian diplomat...   \n",
       "4  Trump wants Postal Service to charge 'much mor...   \n",
       "\n",
       "                                                text       subject  \\\n",
       "0  WASHINGTON (Reuters) - The head of a conservat...  politicsNews   \n",
       "1  WASHINGTON (Reuters) - Transgender people will...  politicsNews   \n",
       "2  WASHINGTON (Reuters) - The special counsel inv...  politicsNews   \n",
       "3  WASHINGTON (Reuters) - Trump campaign adviser ...  politicsNews   \n",
       "4  SEATTLE/WASHINGTON (Reuters) - President Donal...  politicsNews   \n",
       "\n",
       "                 date  label  \n",
       "0  December 31, 2017       1  \n",
       "1  December 29, 2017       1  \n",
       "2  December 31, 2017       1  \n",
       "3  December 30, 2017       1  \n",
       "4  December 29, 2017       1  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "true_news.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "ff8beac5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-29T10:49:50.642562Z",
     "iopub.status.busy": "2024-06-29T10:49:50.641637Z",
     "iopub.status.idle": "2024-06-29T10:49:50.653071Z",
     "shell.execute_reply": "2024-06-29T10:49:50.652079Z"
    },
    "papermill": {
     "duration": 0.024485,
     "end_time": "2024-06-29T10:49:50.655192",
     "exception": false,
     "start_time": "2024-06-29T10:49:50.630707",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>title</th>\n",
       "      <th>text</th>\n",
       "      <th>subject</th>\n",
       "      <th>date</th>\n",
       "      <th>label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Donald Trump Sends Out Embarrassing New Year’...</td>\n",
       "      <td>Donald Trump just couldn t wish all Americans ...</td>\n",
       "      <td>News</td>\n",
       "      <td>December 31, 2017</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Drunk Bragging Trump Staffer Started Russian ...</td>\n",
       "      <td>House Intelligence Committee Chairman Devin Nu...</td>\n",
       "      <td>News</td>\n",
       "      <td>December 31, 2017</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Sheriff David Clarke Becomes An Internet Joke...</td>\n",
       "      <td>On Friday, it was revealed that former Milwauk...</td>\n",
       "      <td>News</td>\n",
       "      <td>December 30, 2017</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Trump Is So Obsessed He Even Has Obama’s Name...</td>\n",
       "      <td>On Christmas day, Donald Trump announced that ...</td>\n",
       "      <td>News</td>\n",
       "      <td>December 29, 2017</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Pope Francis Just Called Out Donald Trump Dur...</td>\n",
       "      <td>Pope Francis used his annual Christmas Day mes...</td>\n",
       "      <td>News</td>\n",
       "      <td>December 25, 2017</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                               title  \\\n",
       "0   Donald Trump Sends Out Embarrassing New Year’...   \n",
       "1   Drunk Bragging Trump Staffer Started Russian ...   \n",
       "2   Sheriff David Clarke Becomes An Internet Joke...   \n",
       "3   Trump Is So Obsessed He Even Has Obama’s Name...   \n",
       "4   Pope Francis Just Called Out Donald Trump Dur...   \n",
       "\n",
       "                                                text subject  \\\n",
       "0  Donald Trump just couldn t wish all Americans ...    News   \n",
       "1  House Intelligence Committee Chairman Devin Nu...    News   \n",
       "2  On Friday, it was revealed that former Milwauk...    News   \n",
       "3  On Christmas day, Donald Trump announced that ...    News   \n",
       "4  Pope Francis used his annual Christmas Day mes...    News   \n",
       "\n",
       "                date  label  \n",
       "0  December 31, 2017      0  \n",
       "1  December 31, 2017      0  \n",
       "2  December 30, 2017      0  \n",
       "3  December 29, 2017      0  \n",
       "4  December 25, 2017      0  "
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "fake_news.head(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fcbe6d08",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-29T10:42:54.121826Z",
     "iopub.status.busy": "2024-06-29T10:42:54.121067Z",
     "iopub.status.idle": "2024-06-29T10:42:54.130382Z",
     "shell.execute_reply": "2024-06-29T10:42:54.128913Z",
     "shell.execute_reply.started": "2024-06-29T10:42:54.121786Z"
    },
    "papermill": {
     "duration": 0.009617,
     "end_time": "2024-06-29T10:49:50.674836",
     "exception": false,
     "start_time": "2024-06-29T10:49:50.665219",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Removing coloumn which are not required"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "af1941f7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-29T10:49:50.696182Z",
     "iopub.status.busy": "2024-06-29T10:49:50.695830Z",
     "iopub.status.idle": "2024-06-29T10:49:50.705584Z",
     "shell.execute_reply": "2024-06-29T10:49:50.704538Z"
    },
    "papermill": {
     "duration": 0.022943,
     "end_time": "2024-06-29T10:49:50.707675",
     "exception": false,
     "start_time": "2024-06-29T10:49:50.684732",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df = df.drop([\"title\", \"subject\",\"date\"], axis = 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "7ac4ebb8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-29T10:49:50.729089Z",
     "iopub.status.busy": "2024-06-29T10:49:50.728684Z",
     "iopub.status.idle": "2024-06-29T10:49:50.743593Z",
     "shell.execute_reply": "2024-06-29T10:49:50.742422Z"
    },
    "papermill": {
     "duration": 0.028089,
     "end_time": "2024-06-29T10:49:50.745751",
     "exception": false,
     "start_time": "2024-06-29T10:49:50.717662",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "text     0\n",
       "label    0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "3947d7b9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-29T10:49:50.767526Z",
     "iopub.status.busy": "2024-06-29T10:49:50.767145Z",
     "iopub.status.idle": "2024-06-29T10:49:50.773636Z",
     "shell.execute_reply": "2024-06-29T10:49:50.772715Z"
    },
    "papermill": {
     "duration": 0.019833,
     "end_time": "2024-06-29T10:49:50.775691",
     "exception": false,
     "start_time": "2024-06-29T10:49:50.755858",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['text', 'label'], dtype='object')"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9274a647",
   "metadata": {
    "papermill": {
     "duration": 0.009921,
     "end_time": "2024-06-29T10:49:50.795931",
     "exception": false,
     "start_time": "2024-06-29T10:49:50.786010",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Random Shuffling"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "ba10ba06",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-29T10:49:50.818866Z",
     "iopub.status.busy": "2024-06-29T10:49:50.818501Z",
     "iopub.status.idle": "2024-06-29T10:49:50.831550Z",
     "shell.execute_reply": "2024-06-29T10:49:50.830672Z"
    },
    "papermill": {
     "duration": 0.027498,
     "end_time": "2024-06-29T10:49:50.834001",
     "exception": false,
     "start_time": "2024-06-29T10:49:50.806503",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df = df.sample(frac = 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "7a6ad99c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-29T10:49:50.856386Z",
     "iopub.status.busy": "2024-06-29T10:49:50.855635Z",
     "iopub.status.idle": "2024-06-29T10:49:50.865238Z",
     "shell.execute_reply": "2024-06-29T10:49:50.864222Z"
    },
    "papermill": {
     "duration": 0.022999,
     "end_time": "2024-06-29T10:49:50.867382",
     "exception": false,
     "start_time": "2024-06-29T10:49:50.844383",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>text</th>\n",
       "      <th>label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>6648</th>\n",
       "      <td>Conservatives in an Alabama town have decided ...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14927</th>\n",
       "      <td>SOCHI, Russia (Reuters) - President Vladimir P...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9746</th>\n",
       "      <td>This is what Democrats think of people who bro...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6786</th>\n",
       "      <td>WASHINGTON (Reuters) - The U.S. Senate passed ...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17338</th>\n",
       "      <td>I heard Mr. McLellan on the radio yesterday an...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                    text  label\n",
       "6648   Conservatives in an Alabama town have decided ...      0\n",
       "14927  SOCHI, Russia (Reuters) - President Vladimir P...      1\n",
       "9746   This is what Democrats think of people who bro...      0\n",
       "6786   WASHINGTON (Reuters) - The U.S. Senate passed ...      1\n",
       "17338  I heard Mr. McLellan on the radio yesterday an...      0"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "2db45d20",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-29T10:49:50.889548Z",
     "iopub.status.busy": "2024-06-29T10:49:50.889177Z",
     "iopub.status.idle": "2024-06-29T10:49:50.897784Z",
     "shell.execute_reply": "2024-06-29T10:49:50.896967Z"
    },
    "papermill": {
     "duration": 0.02213,
     "end_time": "2024-06-29T10:49:50.899946",
     "exception": false,
     "start_time": "2024-06-29T10:49:50.877816",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df.reset_index(inplace = True)\n",
    "df.drop([\"index\"], axis = 1, inplace = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "09cd13ad",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-29T10:49:50.922615Z",
     "iopub.status.busy": "2024-06-29T10:49:50.921703Z",
     "iopub.status.idle": "2024-06-29T10:49:50.928346Z",
     "shell.execute_reply": "2024-06-29T10:49:50.927388Z"
    },
    "papermill": {
     "duration": 0.020108,
     "end_time": "2024-06-29T10:49:50.930418",
     "exception": false,
     "start_time": "2024-06-29T10:49:50.910310",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['text', 'label'], dtype='object')"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "d203d460",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-29T10:49:50.952836Z",
     "iopub.status.busy": "2024-06-29T10:49:50.952466Z",
     "iopub.status.idle": "2024-06-29T10:49:50.961821Z",
     "shell.execute_reply": "2024-06-29T10:49:50.960835Z"
    },
    "papermill": {
     "duration": 0.02303,
     "end_time": "2024-06-29T10:49:50.963928",
     "exception": false,
     "start_time": "2024-06-29T10:49:50.940898",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>text</th>\n",
       "      <th>label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Conservatives in an Alabama town have decided ...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>SOCHI, Russia (Reuters) - President Vladimir P...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>This is what Democrats think of people who bro...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>WASHINGTON (Reuters) - The U.S. Senate passed ...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>I heard Mr. McLellan on the radio yesterday an...</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                text  label\n",
       "0  Conservatives in an Alabama town have decided ...      0\n",
       "1  SOCHI, Russia (Reuters) - President Vladimir P...      1\n",
       "2  This is what Democrats think of people who bro...      0\n",
       "3  WASHINGTON (Reuters) - The U.S. Senate passed ...      1\n",
       "4  I heard Mr. McLellan on the radio yesterday an...      0"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bfb02303",
   "metadata": {
    "papermill": {
     "duration": 0.010195,
     "end_time": "2024-06-29T10:49:50.985018",
     "exception": false,
     "start_time": "2024-06-29T10:49:50.974823",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Defining dependent and indepedent data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "dfe56e41",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-29T10:49:51.007818Z",
     "iopub.status.busy": "2024-06-29T10:49:51.007455Z",
     "iopub.status.idle": "2024-06-29T10:49:51.012505Z",
     "shell.execute_reply": "2024-06-29T10:49:51.011508Z"
    },
    "papermill": {
     "duration": 0.018744,
     "end_time": "2024-06-29T10:49:51.014492",
     "exception": false,
     "start_time": "2024-06-29T10:49:50.995748",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "X = df[\"text\"]\n",
    "y = df[\"label\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "b94c34c2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-29T10:49:51.038503Z",
     "iopub.status.busy": "2024-06-29T10:49:51.037483Z",
     "iopub.status.idle": "2024-06-29T10:49:51.044089Z",
     "shell.execute_reply": "2024-06-29T10:49:51.043121Z"
    },
    "papermill": {
     "duration": 0.020884,
     "end_time": "2024-06-29T10:49:51.046226",
     "exception": false,
     "start_time": "2024-06-29T10:49:51.025342",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(44898,)"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "8318b95f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-29T10:49:51.070273Z",
     "iopub.status.busy": "2024-06-29T10:49:51.069341Z",
     "iopub.status.idle": "2024-06-29T10:49:51.075663Z",
     "shell.execute_reply": "2024-06-29T10:49:51.074690Z"
    },
    "papermill": {
     "duration": 0.02056,
     "end_time": "2024-06-29T10:49:51.077807",
     "exception": false,
     "start_time": "2024-06-29T10:49:51.057247",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(44898,)"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "981546bf",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-29T10:49:51.101470Z",
     "iopub.status.busy": "2024-06-29T10:49:51.101074Z",
     "iopub.status.idle": "2024-06-29T10:49:51.106596Z",
     "shell.execute_reply": "2024-06-29T10:49:51.105640Z"
    },
    "papermill": {
     "duration": 0.019994,
     "end_time": "2024-06-29T10:49:51.108916",
     "exception": false,
     "start_time": "2024-06-29T10:49:51.088922",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.series.Series'>\n"
     ]
    }
   ],
   "source": [
    "print(type(X))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "55f0b91c",
   "metadata": {
    "papermill": {
     "duration": 0.010738,
     "end_time": "2024-06-29T10:49:51.130925",
     "exception": false,
     "start_time": "2024-06-29T10:49:51.120187",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## train test split"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "b1f83e31",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-29T10:49:51.154442Z",
     "iopub.status.busy": "2024-06-29T10:49:51.154050Z",
     "iopub.status.idle": "2024-06-29T10:49:51.158559Z",
     "shell.execute_reply": "2024-06-29T10:49:51.157542Z"
    },
    "papermill": {
     "duration": 0.018702,
     "end_time": "2024-06-29T10:49:51.160657",
     "exception": false,
     "start_time": "2024-06-29T10:49:51.141955",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "18673566",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-29T10:49:51.184900Z",
     "iopub.status.busy": "2024-06-29T10:49:51.184489Z",
     "iopub.status.idle": "2024-06-29T10:49:51.211668Z",
     "shell.execute_reply": "2024-06-29T10:49:51.210825Z"
    },
    "papermill": {
     "duration": 0.042465,
     "end_time": "2024-06-29T10:49:51.214119",
     "exception": false,
     "start_time": "2024-06-29T10:49:51.171654",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, stratify=y, random_state=42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "cadac758",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-29T10:49:51.237896Z",
     "iopub.status.busy": "2024-06-29T10:49:51.237218Z",
     "iopub.status.idle": "2024-06-29T10:49:51.244944Z",
     "shell.execute_reply": "2024-06-29T10:49:51.243919Z"
    },
    "papermill": {
     "duration": 0.022037,
     "end_time": "2024-06-29T10:49:51.247233",
     "exception": false,
     "start_time": "2024-06-29T10:49:51.225196",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "29608    (Reuters) - The Trump administration drew vigo...\n",
       "14501    RIYADH (Reuters) - U.S. President Barack Obama...\n",
       "34828                                                     \n",
       "3998     WASHINGTON/NEW YORK (Reuters) - Republican Don...\n",
       "19145    LUSAKA (Reuters) - Zambian President Edgar Lun...\n",
       "                               ...                        \n",
       "19060    I think we can all agree that America believes...\n",
       "6535     DUBLIN (Reuters) - Tens of thousands of people...\n",
       "17001    Democratic Senator Dianne Feinstein told a fed...\n",
       "36056    You can t say that both parties are the same w...\n",
       "37156    The following statements were posted to the ve...\n",
       "Name: text, Length: 35918, dtype: object"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "a03c3308",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-29T10:49:51.271623Z",
     "iopub.status.busy": "2024-06-29T10:49:51.270812Z",
     "iopub.status.idle": "2024-06-29T10:49:51.278512Z",
     "shell.execute_reply": "2024-06-29T10:49:51.277537Z"
    },
    "papermill": {
     "duration": 0.022133,
     "end_time": "2024-06-29T10:49:51.280572",
     "exception": false,
     "start_time": "2024-06-29T10:49:51.258439",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "29608    1\n",
       "14501    1\n",
       "34828    0\n",
       "3998     1\n",
       "19145    1\n",
       "        ..\n",
       "19060    0\n",
       "6535     1\n",
       "17001    0\n",
       "36056    0\n",
       "37156    1\n",
       "Name: label, Length: 35918, dtype: int64"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "\n",
    "y_train"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c478c20d",
   "metadata": {
    "papermill": {
     "duration": 0.010993,
     "end_time": "2024-06-29T10:49:51.302970",
     "exception": false,
     "start_time": "2024-06-29T10:49:51.291977",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Convert text to vector"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "f2ff06db",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-29T10:49:51.327623Z",
     "iopub.status.busy": "2024-06-29T10:49:51.326854Z",
     "iopub.status.idle": "2024-06-29T10:50:07.073733Z",
     "shell.execute_reply": "2024-06-29T10:50:07.072775Z"
    },
    "papermill": {
     "duration": 15.761912,
     "end_time": "2024-06-29T10:50:07.076356",
     "exception": false,
     "start_time": "2024-06-29T10:49:51.314444",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.feature_extraction.text import TfidfVectorizer\n",
    "\n",
    "vectorization = TfidfVectorizer()\n",
    "Xv_train = vectorization.fit_transform(X_train)\n",
    "Xv_test = vectorization.transform(X_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "60b0eb37",
   "metadata": {
    "papermill": {
     "duration": 0.011151,
     "end_time": "2024-06-29T10:50:07.099076",
     "exception": false,
     "start_time": "2024-06-29T10:50:07.087925",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Model Building"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "12db370d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-29T10:50:07.124296Z",
     "iopub.status.busy": "2024-06-29T10:50:07.123466Z",
     "iopub.status.idle": "2024-06-29T10:50:07.206524Z",
     "shell.execute_reply": "2024-06-29T10:50:07.205449Z"
    },
    "papermill": {
     "duration": 0.098643,
     "end_time": "2024-06-29T10:50:07.209118",
     "exception": false,
     "start_time": "2024-06-29T10:50:07.110475",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.metrics import accuracy_score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "9baef245",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-29T10:50:07.234039Z",
     "iopub.status.busy": "2024-06-29T10:50:07.233133Z",
     "iopub.status.idle": "2024-06-29T10:50:12.882830Z",
     "shell.execute_reply": "2024-06-29T10:50:12.881793Z"
    },
    "papermill": {
     "duration": 5.664944,
     "end_time": "2024-06-29T10:50:12.885497",
     "exception": false,
     "start_time": "2024-06-29T10:50:07.220553",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression()</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "LogisticRegression()"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model=LogisticRegression()\n",
    "model.fit(Xv_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "b28b5368",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-29T10:50:12.958378Z",
     "iopub.status.busy": "2024-06-29T10:50:12.957881Z",
     "iopub.status.idle": "2024-06-29T10:50:12.976942Z",
     "shell.execute_reply": "2024-06-29T10:50:12.975809Z"
    },
    "papermill": {
     "duration": 0.056053,
     "end_time": "2024-06-29T10:50:12.980467",
     "exception": false,
     "start_time": "2024-06-29T10:50:12.924414",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "pred_lr=model.predict(Xv_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "1fa5d977",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-29T10:50:13.007481Z",
     "iopub.status.busy": "2024-06-29T10:50:13.007114Z",
     "iopub.status.idle": "2024-06-29T10:50:13.021805Z",
     "shell.execute_reply": "2024-06-29T10:50:13.020717Z"
    },
    "papermill": {
     "duration": 0.029449,
     "end_time": "2024-06-29T10:50:13.024168",
     "exception": false,
     "start_time": "2024-06-29T10:50:12.994719",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.9883073496659243"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model.score(Xv_test, y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "cd464800",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-29T10:50:13.119026Z",
     "iopub.status.busy": "2024-06-29T10:50:13.118645Z",
     "iopub.status.idle": "2024-06-29T10:50:13.147274Z",
     "shell.execute_reply": "2024-06-29T10:50:13.146260Z"
    },
    "papermill": {
     "duration": 0.113401,
     "end_time": "2024-06-29T10:50:13.149942",
     "exception": false,
     "start_time": "2024-06-29T10:50:13.036541",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.99      0.99      0.99      4696\n",
      "           1       0.99      0.99      0.99      4284\n",
      "\n",
      "    accuracy                           0.99      8980\n",
      "   macro avg       0.99      0.99      0.99      8980\n",
      "weighted avg       0.99      0.99      0.99      8980\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(classification_report(y_test, pred_lr))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3bc56857",
   "metadata": {
    "papermill": {
     "duration": 0.011373,
     "end_time": "2024-06-29T10:50:13.173253",
     "exception": false,
     "start_time": "2024-06-29T10:50:13.161880",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 5255871,
     "sourceId": 8750619,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30732,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 31.450485,
   "end_time": "2024-06-29T10:50:13.805362",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-06-29T10:49:42.354877",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
